import Courses from '../../../../models/coursesModel';
import Playlist from '../../../../models/playlistModel';
import connectDB from '../../../../config/db';
import isAuth from '../../../../utils/isAuth';

//For File Deletion after upload
const fs = require('fs');
const util = require('util');
const unlinkFile = util.promisify(fs.unlink);

//const { uploadImage, upload } = require('../utils/multer');
import { uploadImage } from '../../../../utils/s3';

//const { uploadFile, deleteFile, getFileStream } = require('../utils/s3');
//import { uploadFile, deleteFile, getFileStream } from '../../../../utils/s3';

function escapeRegex(text) {
    return text.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
}












import nc from 'next-connect';
//import onError from '../../../common/errormiddleware';
import multer from 'multer';
import path from 'path';
//import { executeQuery } from '../../../config/db';

// export const config = {
//   api: {
//     bodyParser: false,
//   },
// };

//const handler = nc(
  //onError
  //);

let storage = multer.diskStorage({
  destination: function (req, file, cb) {
    cb(null, 'public');
  },
  filename: function (req, file, cb) {
    cb(
      null,
      file.fieldname + '-' + Date.now() + path.extname(file.originalname)
    );
  },
});

let upload = multer({
  storage: storage,
});

let uploadFile = upload.single('file');



export const config = {
  api: {
    bodyParse: false,
  },
};






import formidable from 'formidable';

import nc from 'next-connect';
const handler = nc();
let uploadFile = uploadImage.single('image');
handler.use(uploadFile);
handler.use(isAuth);

handler.put(async (req, res) => {

    const { courseID } = req.query;
    connectDB();

    console.log(req.body.name)
    console.log(req.params)

    //Update a course
    const course = await Courses.findById(courseID);
    //console.log(course);
    if (req.user._id.toString !== course.seller.toString) {
      return res.status(404).send({ error: 'You are not the owner of this course' });
    }


      console.log('2');

      try {
        console.log('3');
        let result = null;

        if (req.file) {
          const file = req.file;
          result = await uploadFile(file);
          console.log(result);
          await unlinkFile(file.path);
          if (course.imageKey !== '2afc8b6cf9eac4ba672938e7b792ccdc')
            await deleteFile(course.imageKey);
        }

        if (course) {
          console.log('4');
          if (req.body.name) course.title = req.body.name;
          console.log(req.body.name);
          if (req.body.price) course.price = parseInt(req.body.price);
          if (req.file && result) course.imageKey = result.Key;
          if (req.body.description) course.description = req.body.description;
          if (req.body.category) course.category = req.body.category;
          if (req.body.subcategory) course.subCategory = req.body.subCategory;
          if (req.body.tags) course.tags = req.body.tags;

          try {
            console.log('5')
            const updatedCourse = await course.save();
            console.log(updatedCourse);
            res.send({ message: 'course Updated', course: updatedCourse });
          } catch (error) {
            //res.status(404).send({ message: 'Course Not Found' });
          }
        } else {
          //res.status(404).send({ message: 'Course Not Found' });
        }
      } catch (err) {
        res.json(err);
        console.log(err)
      }

      //Implement thiss somehow --> uploadImage.single("image")
    }
);

export default handler;
//export default isAuth(handler);